#query AppSchemaQuery($nfToken: String!, $appId: String!) @netlify(id: "30aeff10-e743-473e-bae0-438a48074edc", doc: "Get the _metadata_ about a site's current GraphQL schema:\n\n- enabled services\n- schema id\n- creation date\n\netc.") {
#  oneGraph(auths: {netlifyAuth: {oauthToken: $nfToken}}) {
#    app(id: $appId) {
#      graphQLSchema {
#        appId
#        createdAt
#        id
#        services {
#          friendlyServiceName
#          logoUrl
#          service
#          slug
#          supportsCustomRedirectUri
#          supportsCustomServiceAuth
#          supportsOauthLogin
#        }
#        updatedAt
#      }
#    }
#  }
#}

#mutation CreateNewSchemaMutation($nfToken: String!, $input: OneGraphCreateGraphQLSchemaInput!) @netlify(id: "4fc2298a-225b-4329-b3f3-a8f8bc0513a8", doc: "Create a new GraphQL schema for an app with a set of services enabled. Note that this just makes the schema _available_ for the app to use, it doesn't set it as the default for all queries to use.") {
#  oneGraph(auths: {netlifyAuth: {oauthToken: $nfToken}}) {
#    createGraphQLSchema(input: $input) {
#      app {
#        graphQLSchema {
#          id
#        }
#      }
#      graphqlSchema {
#        id
#        services {
#          friendlyServiceName
#          logoUrl
#          service
#          slug
#          supportsCustomRedirectUri
#          supportsCustomServiceAuth
#          supportsOauthLogin
#        }
#      }
#    }
#  }
#}
#
fragment ServiceAuthFragment on OneGraphServiceAuth @netlify(id: "12b5bdea-9bab-4164-a731-5e697b1553be", doc: "Subset of OneGraphServiceAuth") {
  id
  service
  clientId
  scopes
}

#fragment LoggedInServicesFragment on OneGraphServiceMetadata @netlify(id: "12b5bdea-9bab-4124-a731-5e697b1553be", doc: "Subset of LoggedInServices") {
#  friendlyServiceName
#  service
#  isLoggedIn
#  serviceInfo {
#    logoUrl
#    availableScopes {
#      category
#      scope
#      display
#      isDefault
#      isRequired
#      description
#      title
#    }
#  }
#  grantedScopes {
#    scope
#  }
#}
#query GitHubViewer($size: Int!) @netlify(id: "2b0c3674-06b0-4a84-b296-afa92c10dc6b", doc: "An example query to start with.") {
#  gitHub {
#    viewer {
#      bio
#      email
#      name
#      login
#      avatarUrl(size: $size)
#    }
#  }
#}
#query ExampleQuery($package: String!) @netlify(id: "d86699fb-ddfc-4833-9d9a-f3497cb7c992", doc: "A test query to snapshot") {
#  npm {
#    package(name: $package) {
#      id
#      readme
#      license {
#        url
#      }
#    }
#  }
#}
#
#
#
#subscription NpmPublishActivity @netlify(id: "39b94699-9a08-4deb-bf06-8e5b4d5eee9f", doc: "Package info with open issue count on every publish") {
#  npm {
#    allPublishActivity {
#      package {
#        id
#        name
#        description
#        license {
#          url
#        }
#        repository {
#          sourceRepository {
#            ... on GitHubRepository {
#              id
#              name
#              issues(states: OPEN) {
#                totalCount
#              }
#            }
#          }
#        }
#      }
#    }
#  }
#}
#
#query GitHubRepositoryIssues($owner: String!, $name: String!, $first: Int = 1) @netlify(id: "12b5bdea-9bab-4164-a731-5e697b1552be", doc: "GitHub issues for everyone") {
#  gitHub {
#    repository(name: $name, owner: $owner) {
#      issues(first: $first) {
#        edges {
#          node {
#            body
#            bodyHTML
#            id
#            oneGraphId
#            state
#            url
#          }
#        }
#      }
#    }
#  }
#}
#
#
#
#query FindLoggedInServicesQuery($nfToken: String!, $authlifyTokenId: String!) @netlify(id: "68c383e7-2e2f-4e6c-9a72-a5d095498ba3", doc: "Fetch all logged-in OneGraph services (GitHub, Spotify, etc.) for a user's site") {
#  oneGraph(auths: {netlifyAuth: {oauthToken: $nfToken}}) {
#    authlifyToken(authlifyTokenId: $authlifyTokenId) {
#      serviceMetadata {
#        loggedInServices {
#          usedTestFlow
#          friendlyServiceName
#          ...LoggedInServicesFragment
#          bearerToken
#          foreignUserId
#        }
#      }
#    }
#  }
#}
#
#query Deprecated_FindLoggedInServicesQuery @netlify(id: "9ffe3872-4ae8-4f86-b5b7-ffcdfe7843fd", doc: "(Deprecated) Find logged in services") {
#  me {
#    serviceMetadata {
#      loggedInServices {
#        ...LoggedInServicesFragment
#      }
#    }
#  }
#}
#
#mutation DeleteServiceAuthMutation($siteId: String!, $serviceAuthId: String!, $nfToken: String!) @netlify(id: "5c7bb879-a810-4a7e-8aec-55d05fd9c172", doc: "Delete a custom service auth") {
#  oneGraph(auths: {netlifyAuth: {oauthToken: $nfToken}}) {
#    destroyServiceAuth(data: {appId: $siteId, serviceAuthId: $serviceAuthId}) {
#      app {
#        serviceAuths {
#          ...ServiceAuthFragment
#        }
#      }
#    }
#  }
#}